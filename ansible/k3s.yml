---

- name: Initialising cluster
  hosts:
    - oracle-workers
    - gcp-workers
    - cretus
  become: true
  tasks:
    - name: Updating instances
      ansible.builtin.apt:
        update_cache: true
        upgrade: dist

    - name: Downloading k3s script
      ansible.builtin.get_url:
        url: https://get.k3s.io
        dest: /tmp/k3s.sh
        mode: "0555"

- name: Update K3S Master
  hosts: cretus
  become: true
  tasks:
    - name: Create /etc/rancher/k3s director
      ansible.builtin.file:
        path: /etc/rancher/k3s
        state: directory
        mode: '0755'
    - name: Copy over config.yaml
      ansible.builtin.copy:
        src: ./k3s-master-config.yaml
        dest: /etc/rancher/k3s/config.yaml
        mode: '0644'
    - name: Installing k3s
      ansible.builtin.command: /tmp/k3s.sh
      environment:
        INSTALL_K3S_VERSION: "v1.28.2+k3s1"
      changed_when: false
    - name: Sleep for 10 seconds
      ansible.builtin.wait_for:
        timeout: 20
    - name: Check if service is running
      ansible.builtin.systemd:
        name: k3s
        state: started
        enabled: true

- name: Get Agent Token
  become: true
  hosts: cretus
  tasks:
    - name: Copy agent token
      ansible.builtin.slurp:
        path: /var/lib/rancher/k3s/server/agent-token
      register: agent_token
    - name: Set variable agent_token_fact
      ansible.builtin.set_fact:
        agent_token_fact: "{{ agent_token.content | b64decode | trim }}"

- name: Starting K3S Agent
  hosts:
    - oracle-workers
    - gcp-workers
  become: true
  tasks:
    - name: Installing k3s
      ansible.builtin.command: /tmp/k3s.sh
      environment:
        K3S_TOKEN: "{{ hostvars['cretus']['agent_token_fact'] }}"
        K3S_URL: "https://130.61.64.164:6443"
        INSTALL_K3S_VERSION: "v1.28.2+k3s1"
      changed_when: false
    - name: Sleep for 10 seconds
      ansible.builtin.wait_for:
        timeout: 20
    - name: Check if service is running
      ansible.builtin.systemd:
        name: k3s-agent
        state: restarted
        enabled: true

# - name: Enabling Nodes
#   hosts: cretus
#   become: true
#   tasks:
#     - name: Sleep for 10 seconds
#       ansible.builtin.wait_for:
#         timeout: 10
#     - name: Adding role to worker node arm1
#       ansible.builtin.command: kubectl label node arm1 kubernetes.io/role=worker
#       changed_when: false
#     - name: Adding role to worker node arm2
#       ansible.builtin.command: kubectl label node arm2 kubernetes.io/role=worker
#       changed_when: false
#     - name: Adding role to worker node amd2
#       ansible.builtin.command: kubectl label node amd2 kubernetes.io/role=worker
#       changed_when: false
#     - name: Adding role to worker node gcp1
#       ansible.builtin.command: kubectl label node gcp1 kubernetes.io/role=worker
#       changed_when: false
