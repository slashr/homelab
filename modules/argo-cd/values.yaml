controller:
  enableStatefulSet: true

server:
  autoscaling:
    enabled: false
    minReplicas: 1


## The following addons are not really necessarily for a homelab setup
## Enable if you have enough CPU/Memory resources and need them for some purpose
dex:
  enabled: false

redis:
  # -- Enable redis
  enabled: true
  # -- Redis name
  name: redis

  ## Redis image
  image:
    # -- Redis repository
    repository: public.ecr.aws/docker/library/redis
    # -- Redis tag
    tag: 7.0.13-alpine
    # -- Redis image pull policy
    # @default -- `""` (defaults to global.image.imagePullPolicy)
    imagePullPolicy: ""

notifications:
  enabled: false

applicationSet:
  enabled: false

repoServer:
  autoscaling:
    enabled: false
    minReplicas: 1

configs:
  params:
    # Disable TLS termination on ArgoCD server
    # TLS is handled by the Ingress controller
    # If disabled, this leads to endless redirect loop.
    server.insecure: true
  secret:
    argocdServerAdminPassword: $2a$10$rC8YEHTQ6XGPADs2aTJxA.lQwXoYRqhxM4lRplHyisdj77NNxsiN.
  repositories:
    podinfo-helm-repo:
      url: https://stefanprodan.github.io/podinfo
      name: podinfo
      type: helm
    app-manifests-repo:
      url: https://github.com/slashr/app-manifests.git
      name: app-manifests
      type: git

server:
  ingress:
    enabled: true
    annotations:
      # Create a A record pointing to the given IP on cloudflare
      external-dns.alpha.kubernetes.io/hostname: argo.akashnair.com
      external-dns.alpha.kubernetes.io/target: 130.61.64.164
      # This lets cert-manager identify which Ingresses to generate a cert for
      cert-manager.io/cluster-issuer: letsencrypt-prod
    hostname: "argo.akashnair.com"
    tls: true

  certificate:
    # -- Deploy a Certificate resource (requires cert-manager)
    enabled: true
    # -- The name of the Secret that will be automatically created and managed by this Certificate resource
    secretName: argocd-server-tls
    # -- Certificate primary domain (commonName)
    domain: argo.akashnair.com
    issuer:
      # -- Certificate issuer group. Set if using an external issuer. Eg. `cert-manager.io`
      group: "cert-manager.io"
      # -- Certificate issuer kind. Either `Issuer` or `ClusterIssuer`
      kind: "ClusterIssuer"
      # -- Certificate issuer name. Eg. `letsencrypt`
      name: "letsencrypt-prod"
